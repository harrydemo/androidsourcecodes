2011-11-22 更正了两处小BUG

2011-11-20 LGame-0.3.2-Update：

1、LGame-0.3.2版延续0.3.1，使用OpenGL作为游戏渲染核心，早前的AWT与Canvas实现版本现已更名为LSE与LAE（延续0.3）。

2、LGame-0.3.2版极大扩展了LGame核心包功能，新增工具、特效、精灵、接口以数百计（具体细节正在完善文档中，此处不再详述）。

3、LGame-0.3.2版在核心包基础上，新增了STG开发模块，作为游戏框架的额外补充（目前默认支持（可以基本用脚本完成）的游戏类型已含STG、SRPG、AVG，预计0.3.3提供RTS支持）。

4、LGame-0.3.2版的C#(WP7)版已经构建完毕，不久后也将发布。

PS：LSE和LAE包是针对LGame在0.3.1改版前旧版框架的延续，相对0.3.1及0.3.2版使用的OpenGL渲染方式而言，它们继续采用JavaSE环境所提供的AWT(特指LSE版)以及Android环境所提供的Canvas（特指LAE版）作为游戏绘图核心，并且仅在LGame的Java版中出现，其它语法环境下无对应版本提供（比如很快会发布的C#（WP7）版）。
    
   LSE与LAE包与标准LGame包的主要差别有如下几点：

   1、标准LGame自0.3.2起彻底重构了原有的geom包，已经不再附带OpenJDK中的geom包，但LSE与LAE版继续使用该包。

   2、标准LGame使用GLEx类作为引擎的最基本渲染器，允许使用JavaSE、JavaME的常用绘图API，以及OpenGL、OpenGLES的常用绘图API，而LSE与LAE包仅模拟有JavaSE、JavaME的Graphics类常用接口（这意味着完全不支持OpenGL）。

   3、标准LGame包由于使用OpenGL编程，在不同屏幕手机中进行缩放时，可以较为有效的减少甚至消除画面失真，而LSE与LAE包则难以避免这种现象的产生（特别是大画面的游戏，在较小屏幕的手机上运行时）。

   4、LSE与LAE版基本不受硬件环境限制，在大多数微机或手机中都能产生较为一致的刷新速度（当然，这并不意味着没有浮动，而是指不会出现某些机器上跑几帧，某些机器上跑数十、数百帧的极端情况），而LGame标准版的速度则受到硬件条件制约，对于某些不支持OpenGL硬件渲染的环境而言（比如ADT模拟器以及部分低端真机），它的速度甚至不如LSE与LAE版。因此从某种情况上讲，LSE与LAE版的兼容性要超过目前的标准LGame。

   5、标准LGame包已经不再支持JavaME游戏组件的模拟，并删除了相关类。而在LSE与LAE版中，相关类依旧被保留了下来。

   6、LSE与LAE版的主体结构虽与标准LGame一致，但辅助类明显较LGame标准版本为少（缺少几乎全部工具类以及很多特效类），而各类中提供的API也没有标准版完整。
